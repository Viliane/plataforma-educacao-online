// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlataformaEducacaoOnline.GestaoAluno.Data;

#nullable disable

namespace PlataformaEducacaoOnline.GestaoAluno.Data.Migrations
{
    [DbContext(typeof(GestaoAlunoContext))]
    [Migration("20250606184601_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("PlataformaEducacaoOnline.GestaoAluno.Domain.Aluno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Alunos", (string)null);
                });

            modelBuilder.Entity("PlataformaEducacaoOnline.GestaoAluno.Domain.Certificado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MatriculaId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId")
                        .IsUnique();

                    b.HasIndex("MatriculaId")
                        .IsUnique();

                    b.ToTable("Certificados", (string)null);
                });

            modelBuilder.Entity("PlataformaEducacaoOnline.GestaoAluno.Domain.Matricula", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataMatricula")
                        .HasColumnType("datetime");

                    b.Property<int>("StatusMatricula")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.ToTable("Matriculas", (string)null);
                });

            modelBuilder.Entity("PlataformaEducacaoOnline.GestaoAluno.Domain.Aluno", b =>
                {
                    b.OwnsOne("PlataformaEducacaoOnline.GestaoAluno.Domain.HistoricoAprendizado", "HistoricoAprendizado", b1 =>
                        {
                            b1.Property<Guid>("AlunoId")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("DataRegistro")
                                .HasColumnType("datetime");

                            b1.Property<string>("Descricao")
                                .IsRequired()
                                .HasColumnType("varchar(500)");

                            b1.HasKey("AlunoId");

                            b1.ToTable("Alunos");

                            b1.WithOwner()
                                .HasForeignKey("AlunoId");
                        });

                    b.Navigation("HistoricoAprendizado")
                        .IsRequired();
                });

            modelBuilder.Entity("PlataformaEducacaoOnline.GestaoAluno.Domain.Certificado", b =>
                {
                    b.HasOne("PlataformaEducacaoOnline.GestaoAluno.Domain.Aluno", "Aluno")
                        .WithOne("Certificado")
                        .HasForeignKey("PlataformaEducacaoOnline.GestaoAluno.Domain.Certificado", "AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlataformaEducacaoOnline.GestaoAluno.Domain.Matricula", "Matricula")
                        .WithOne("Certificado")
                        .HasForeignKey("PlataformaEducacaoOnline.GestaoAluno.Domain.Certificado", "MatriculaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Matricula");
                });

            modelBuilder.Entity("PlataformaEducacaoOnline.GestaoAluno.Domain.Matricula", b =>
                {
                    b.HasOne("PlataformaEducacaoOnline.GestaoAluno.Domain.Aluno", "Aluno")
                        .WithMany("Matriculas")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("PlataformaEducacaoOnline.GestaoAluno.Domain.Aluno", b =>
                {
                    b.Navigation("Certificado")
                        .IsRequired();

                    b.Navigation("Matriculas");
                });

            modelBuilder.Entity("PlataformaEducacaoOnline.GestaoAluno.Domain.Matricula", b =>
                {
                    b.Navigation("Certificado")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
