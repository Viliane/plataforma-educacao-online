// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlataformaEducacaoOnline.PagamentoFaturamento.Data;

#nullable disable

namespace PlataformaEducacaoOnline.PagamentoFaturamento.Data.Migrations
{
    [DbContext(typeof(PagamentoContext))]
    [Migration("20250607222836_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("PlataformaEducacaoOnline.PagamentoFaturamento.Business.Pagamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MatriculaId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Pagamentos", (string)null);
                });

            modelBuilder.Entity("PlataformaEducacaoOnline.PagamentoFaturamento.Business.Transacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MatriculaId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PagamentoId")
                        .HasColumnType("TEXT");

                    b.Property<int>("StatusTransacao")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PagamentoId")
                        .IsUnique();

                    b.ToTable("Transacoes", (string)null);
                });

            modelBuilder.Entity("PlataformaEducacaoOnline.PagamentoFaturamento.Business.Pagamento", b =>
                {
                    b.OwnsOne("PlataformaEducacaoOnline.PagamentoFaturamento.Business.DadosCartao", "DadosCartao", b1 =>
                        {
                            b1.Property<Guid>("PagamentoId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("CodigoSegurancaCartao")
                                .IsRequired()
                                .HasColumnType("varchar(4)");

                            b1.Property<string>("ExpiracaoCartao")
                                .IsRequired()
                                .HasColumnType("varchar(10)");

                            b1.Property<string>("NomeCartao")
                                .IsRequired()
                                .HasColumnType("varchar(250)");

                            b1.Property<string>("NumeroCartao")
                                .IsRequired()
                                .HasColumnType("varchar(16)");

                            b1.HasKey("PagamentoId");

                            b1.ToTable("Pagamentos");

                            b1.WithOwner()
                                .HasForeignKey("PagamentoId");
                        });

                    b.Navigation("DadosCartao")
                        .IsRequired();
                });

            modelBuilder.Entity("PlataformaEducacaoOnline.PagamentoFaturamento.Business.Transacao", b =>
                {
                    b.HasOne("PlataformaEducacaoOnline.PagamentoFaturamento.Business.Pagamento", "Pagamento")
                        .WithOne("Transacao")
                        .HasForeignKey("PlataformaEducacaoOnline.PagamentoFaturamento.Business.Transacao", "PagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pagamento");
                });

            modelBuilder.Entity("PlataformaEducacaoOnline.PagamentoFaturamento.Business.Pagamento", b =>
                {
                    b.Navigation("Transacao")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
